services:
  postgres:
    image: postgres:${POSTGRES_IMAGE_TAG}
    container_name: postgres
    restart: ${RESTART_POLICY}
    networks:
      - app-network
    security_opt:
      - no-new-privileges:true
    pids_limit: 100
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/postgresql
    volumes:
      - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data
    environment:
      # timezone inside container
      - TZ=${TZ}
      # necessary Postgres options/variables
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  mattermost:
    depends_on:
      - postgres
    image: mattermost/${MATTERMOST_IMAGE}:${MATTERMOST_IMAGE_TAG}
    container_name: mattermost
    restart: ${RESTART_POLICY}
    networks:
      - app-network
      - web-network
    security_opt:
      - no-new-privileges:true
    pids_limit: 200
    read_only: ${MATTERMOST_CONTAINER_READONLY}
    tmpfs:
      - /tmp
    volumes:
      - ${MATTERMOST_CONFIG_PATH}:/mattermost/config:rw
      - ${MATTERMOST_DATA_PATH}:/mattermost/data:rw
      - ${MATTERMOST_LOGS_PATH}:/mattermost/logs:rw
      - ${MATTERMOST_PLUGINS_PATH}:/mattermost/plugins:rw
      - ${MATTERMOST_CLIENT_PLUGINS_PATH}:/mattermost/client/plugins:rw
      - ${MATTERMOST_BLEVE_INDEXES_PATH}:/mattermost/bleve-indexes:rw
      # When you want to use SSO with GitLab, you have to add the cert pki chain of GitLab inside Alpine
      # to avoid Token request failed: certificate signed by unknown authority 
      # (link: https://github.com/mattermost/mattermost-server/issues/13059 and https://github.com/mattermost/docker/issues/34)
      # - ${GITLAB_PKI_CHAIN_PATH}:/etc/ssl/certs/pki_chain.pem:ro
    environment:
      # timezone inside container
      - TZ=${TZ}
      # necessary Mattermost options/variables
      - MM_SQLSETTINGS_DRIVERNAME=${MM_SQLSETTINGS_DRIVERNAME}
      - MM_SQLSETTINGS_DATASOURCE=${MM_SQLSETTINGS_DATASOURCE}
      # necessary for bleve
      - MM_BLEVESETTINGS_INDEXDIR=${MM_BLEVESETTINGS_INDEXDIR}
      # additional settings
      - MM_SERVICESETTINGS_SITEURL=${MM_SERVICESETTINGS_SITEURL}
      # plugins
      - MM_PLUGINSETTINGS_ENABLE=${MM_PLUGINSETTINGS_ENABLE}
      - MM_PLUGINSETTINGS_ENABLEMARKETPLACE=$MM_PLUGINSETTINGS_ENABLEMARKETPLACE}
      - MM_PLUGINSETTINGS_AUTOMATICPREPACKAGEDPLUGINS=${MM_PLUGINSETTINGS_AUTOMATICPREPACKAGEDPLUGINS}
      - MM_PLUGINSETTINGS_ENABLEUPLOADS=${MM_PLUGINSETTINGS_ENABLEUPLOADS}
      - MM_PLUGINSETTINGS_REQUIREPLUGINSIGNATURE=${MM_PLUGINSETTINGS_REQUIREPLUGINSIGNATURE}
      # mmctl
      - MM_SERVICESETTINGS_ENABLELOCALMODE=${MM_SERVICESETTINGS_ENABLELOCALMODE}
      - MM_SERVICESETTINGS_LOCALMODESOCKETLOCATION=${MM_SERVICESETTINGS_LOCALMODESOCKETLOCATION}
      - MM_PLUGINSETTINGS_ENABLE=${MM_PLUGINSETTINGS_ENABLE}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mattermost.rule=Host(`chat.jalinuxy.ir`) && PathPrefix(`/`)"
      - "traefik.http.routers.mattermost.entrypoints=web-secure"
      - "traefik.http.routers.mattermost.tls.certresolver=le"
      - "traefik.http.services.mattermost.loadbalancer.server.port=8065"

networks:
  web-network:
    external: true
    name: web-network
  app-network:
    external: true
    name: app-network
